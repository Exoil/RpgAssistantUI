openapi: 3.0.0
info:
  title: RPG Assistant API
  version: 1.0.0

servers:
  - url: https://localhost:7208
    description:  httpsLocal development server
  - url: http://localhost:5025
    description: http Local development 5025

tags:
  - name: characters
    description: Operations related to character management

paths:
  /:
    post:
      tags:
        - characters
      summary: Create a new character
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Character'
      responses:
        '201':
          description: Character created
          content:
            application/json:
              schema:
                type: string
                format: uuid
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'

  /{id}:
    get:
      tags:
        - characters
      summary: Get character by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Character details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharacterDetails'
        '404':
          description: Character not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - characters
      summary: Update character by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Character'
      responses:
        '204':
          description: Character updated
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Character not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - characters
      summary: Delete character by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Character deleted
        '404':
          description: Character not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'

  /{sourceId}/knows/{targetId}:
    put:
      tags:
        - characters
      summary: Create knows relationship between characters
      parameters:
        - name: sourceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: targetId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Relationship created
        '404':
          description: Character not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - characters
      summary: Delete knows relationship between characters
      parameters:
        - name: sourceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: targetId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Relationship deleted
        '404':
          description: Character not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'

  /:
    get:
      tags:
        - characters
      summary: Get list of characters
      parameters:
        - name: number
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of characters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CharacterDetails'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'

components:
  schemas:
    Character:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required:
        - name
        - description

    CharacterDetails:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string

    ProblemDetails:
      type: object
      required:
        - type
        - title
        - status
        - detail
        - instance
      properties:
        type:
          type: string
          format: uri
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          format: uri
          nullable: true
        extensions:
          type: object
          additionalProperties: true